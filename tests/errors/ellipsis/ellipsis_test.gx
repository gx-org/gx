package ellipsis

import "shapes"

func inferredShape() [...]float32 {
	a := shapes.Concat(0, [2]float32{2, 3}, [2]float32{4, 5})
	return a + [4]float32{6, 7, 8, 9}
}

func testInferredShapePropagated() [...]float32 {
	return [2]float32{1, 2} + inferredShape() // ERROR: mismatched types [2]float32 and [...:[_=2+2]]float32
}

func inferredShapeForward() [...]float32 {
	return inferredShape()
}

func testInferredShapePropagatedForward() [...]float32 {
	return [2]float32{1, 2} + inferredShapeForward() // ERROR: mismatched types [2]float32 and [...:[_=2+2]]float32
}
