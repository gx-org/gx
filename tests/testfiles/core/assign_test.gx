package core

// Test options:
// setStatic staticValue int64 100

var staticValue int64

func TestDefineBuiltin() bool {
	true := false
	return true
	// Want:
	// bool(false)
}

func TestAssignNumber() int32 {
	a := int32(5)
	a = 4
	return a
	// Want:
	// int32(4)
}

func TestAddAssign() int64 {
	x := 1
	x += 1
	return x
	// Want:
	// int64(2)
}

func TestMulAssign() int64 {
	x := 2
	x *= 2
	return x
	// Want:
	// int64(4)
}

func TestSubAssign() int64 {
	x := 8
	x -= 2
	return x
	// Want:
	// int64(6)
}

func TestDivAssign() int64 {
	x := 8
	x /= 1
	return x
	// Want:
	// int64(8)
}

type point struct {
	x, y float32
}

func TestOpAssignFields() point {
	p := point{x: 2, y: 4}
	p.x += 1.5
	p.y *= 2
	return p
	// Want:
	// core.point{
	//	x: float32(3.5),
	//	y: float32(8),
	// }
}

func newVectors() ([2]float32, [2]float32) {
	return [2]float32{1, 2}, [2]float32{3, 4}
}

func TestDefineWithFuncThenAssign() [2]float32 {
	x, y := newVectors()
	x = [2]float32{-1, -2}
	return x
	// Want:
	// [2]float32{-1, -2}
}
